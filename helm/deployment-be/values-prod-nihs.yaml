fullnameOverride: "s23daimgmlm-be"

image:
  repository: "repo.aequitas.vn/prod/s23daimgmlm/s23daimgmlm-be"
  pullPolicy: Always
  tag: "2024-01-31_30_prod-nihs"

imagePullSecrets:
  name: regcred-repo-edsolabs

replicaCount: 1

restartPolicy: Always

maxSurge: 1
maxUnavailable: 0
# lifecycle:
#   postStart: 
#     exec:
#       command: ["sh", "-c", "node ace migration:run", "node ace db:seed"]
namespace: ""
environmentZone: "prod-nihs"
type: "backend"

commonLabels:
  company: "synodus"
  department: "gpdv"
  project: "s23daimgmlm"

commonAnnotations: {}

customAnnotations:
  reloader:
    enabled: false
    mode: auto
  checksum:
    enabled: true
initContainers:
- name: clear-redis
  image: docker.io/bitnami/redis:6.2
  command: ["sh", "-c", " REDISCLI_AUTH=$REDIS_PASSWORD redis-cli -h redis-nihs-master flushall"]
  env:
  - name: REDIS_PASSWORD
    valueFrom:
      secretKeyRef:
        name: redis-nihs-password
        key: redis-password
configmap:
  existingConfigmap: ""
  createConfigmap: "-"
  configfile: ".prod-nihs.env"

serviceAccount:
  # Specifies whether a service account should be created
  enabled: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  enabled: true
  quota:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: true

PodDisruptionBudget:
  enabled: true

# command: ["sh", "-c", "node ace queue:start", "node ace scheduler:run"]
command: []

service:
  name: &servicePortName "cms-tcp"
  port: &servicePort 3333
  type: NodePort
  targetPort: *servicePort
  protocol: TCP
  clusterIP: ""
  externalTrafficPolicy: Cluster
  nodePort: ""
  loadBalancerIP: ""
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.0.10.0/24
  ##
  loadBalancerSourceRanges: []
  sessionAffinity: None
  sessionAffinityConfig: {}

ingress:
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/client_body_buffer_size: 100M
    nginx.ingress.kubernetes.io/client_header_buffer_size: 100M
    nginx.ingress.kubernetes.io/client_max_body_size: 128M
    nginx.ingress.kubernetes.io/large_client_header_buffers: 8 512k
    nginx.ingress.kubernetes.io/limit-rps: '20'
    nginx.ingress.kubernetes.io/proxy-body-size: 25m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 256k
    nginx.ingress.kubernetes.io/proxy-buffers-number: '4'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '240'
    nginx.ingress.kubernetes.io/proxy-http-version: '1.1'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '240'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '240'
    nginx.ingress.kubernetes.io/server_names_hash_bucket_size: '128'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: s23daimgmlm-perf-api-payment.synodus.com
      paths:
        - path: /
          # pathType: ImplementationSpecific
          pathType: Prefix
  tls:
    - hosts:
      - s23daimgmlm-perf-api-payment.synodus.com
      secretName: synodus-com-tls
  snippets:
    enabled: false
    content: |
      location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        try_files $uri /index.html =404;
      }

livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: *servicePortName
  #   scheme: HTTP
  # timeoutSeconds: 1
  # periodSeconds: 10
  # successThreshold: 1
  # failureThreshold: 3

# readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: *servicePortName
  #   scheme: HTTP
  # timeoutSeconds: 1
  # periodSeconds: 10
  # successThreshold: 1
  # failureThreshold: 3

startupProbe: {}
  # httpGet:
  #   path: /actprodor/health
  #   port: 8080
  #   httpHeaders:
  #     - name: X-Device-ID
  #       value: HealthCheck
  # failureThreshold: 30
  # periodSeconds: 10

webconfig: [] #|-
  # server {
  #     listen       80  default_server;
  #     server_name  _;
  #     etag off;
  #     server_tokens off;
  #     keepalive_requests 100000;
  #     keepalive_timeout 7200s;
  #     gzip on;
  #     gzip_min_length 1000;
  #     gzip_proxied expired no-cache no-store private auth;
  #     gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/rss+xml image/svg+xml;
  #     gzip_disable msie6;
  #     client_body_buffer_size  100M;
  #     client_header_buffer_size 100M;
  #     large_client_header_buffers 8 512k;
  #     client_max_body_size 128M;
  #     add_header X-Content-Type-Options "nosniff" always;
  #     location / {
  #         root /usr/share/nginx/html;
  #         index index.html;
  #         proxy_set_header Connection keep-alive;

  #         proxy_http_version 1.1;
  #         try_files $uri /index.html =404;
  #     }
  #     location = /actprodor/health {
  #         access_log off;
  #         add_header 'Content-Type' 'application/json';
  #         return 200 '{"status":"UP"}';
  #     }
  # }

environmentVarsFromFile: true

environmentVariables: {}
