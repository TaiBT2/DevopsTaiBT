{{ if (include "project.createIngressRule" .) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "project.ingressName" . }}
  namespace : {{ include "project.namespace" . }}
  labels: {{- include "project.standardLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "project.tplvaluesRender" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.ingress.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "project.tplvaluesRender" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.ingress.annotations }}
    {{- include "project.tplvaluesRender" ( dict "value" .Values.ingress.annotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (empty .Values.ingress.annotations) }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "project.serviceName" $ }}
                port:
                  number: {{ $.Values.service.port }}
          {{- end }}
    {{- end }}
{{- end }}